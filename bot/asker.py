import requests
from bot_4 import env
from datetime import datetime
import locale

locale.setlocale(locale.LC_TIME, 'Russian')  # –†—É—Å–∏—Ñ–∏–∫–∞—Ü–∏—è

API_KEY = env.WB_KEY
TG_KEY = env.TELEGRAM_TOKEN
TG_CHAT = env.TELEGRAM_CHAT

def getSimpleDate(text):
    date_object = datetime.strptime(text, "%Y-%m-%dT%H:%M:%SZ")
    formatted_date = date_object.strftime("%d %B %Y") 
    return formatted_date


def sendMessageToTelegram(text):
    # text += ':::::::::::::::::::::'
    urlTG = 'https://api.telegram.org/bot'+TG_KEY+'/sendMessage?chat_id='+TG_CHAT+'&parse_mode=HTML&text='+text
    resp = requests.get(urlTG)
    if resp.status_code == 200:
        print ('–¢–µ–ª–µ–≥—Ä–∞–º–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –í—Å—ë OK!')

def prepare_items(response):
    text = ''
    for i in response:    
        if i['allowUnload'] and i['coefficient']>-1 and i['boxTypeName'] == '–ö–æ—Ä–æ–±–∞':
            if i['coefficient'] == 0: 
                dt = getSimpleDate(i['date'])
                text += dt +'  \n\n'+ i['warehouseName']+'  '+ '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ '+'\n\n üå∑üå∑üå∑'
                print(i['date'] , i['warehouseName'],  '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ')
            else: 
                text += dt +'  \n\n'+ i['warehouseName']+'  '+ '‚úï'+i['coefficient']+'  üò´üå∑üò´'
                print(i['date'] , i['warehouseName'], '–∫–æ—ç—Ñ = ', i['coefficient'])
    if not text:
        text = '–ù–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤ ü§îüò°'
    sendMessageToTelegram(text)

#  üò´ üå∑ üò°

# –°–∫–ª–∞–¥ 
# –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –ø—Ä–∏—ë–º–∫–∏
url = 'http://supplies-api.wildberries.ru/api/v1/acceptance/coefficients'

# –°–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤
# url = "https://supplies-api.wildberries.ru/api/v1/warehouses"

headers = {'Authorization': f'Bearer {API_KEY}','Content-Type': 'application/json'}

# –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞ 
params = {
    'warehouseIDs': [117986]             # ID —Å–∫–ª–∞–¥–∞, (117986 - –ö–∞–∑–∞–Ω—å)
}

response = requests.get(url, headers=headers, params=params)
print('response', response)

# # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞
if response.status_code == 200:
    # –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω, –æ–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –¥–∞–Ω–Ω—ã–µ
    # print('response = ', response)
    data = response.json()
    # print('–ñ –ñ –ñ –ñ –ñ  data = ',data)
    prepare_items(data)
    # print("–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –ø—Ä–∏–µ–º–∫–∏::::: ", json.loads(json.dumps(data, indent=2)))
else:
    # –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –≤—ã–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    print(f"–û—à–∏–±–∫–∞ {response.status_code}: {response.text}")




